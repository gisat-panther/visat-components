@use 'sass:math';
@import '../../styles/variables';
@import '../../styles/placeholderAnimation';

/* Container */
.ptr-TagsContainer {
  display: flex;
  flex-wrap: wrap;
  grid-gap: .5rem;
}

.ptr-TagsContainer.is-small {
  grid-gap: .4rem;
}

/* Base Tag */
.ptr-Tag {
  position: relative;
  overflow: hidden;
  display: flex;
  height: 1.65rem;
  align-items: center;
  padding: 0 .75rem;
  border-radius: .825rem;
  color: $secondaryIconColor;
  background: var(--base15);
  grid-gap: .35rem;
}

.ptr-Tag.is-placeholder {
  background: $placeholderColor;
  width: 5rem;
  height: 1rem;
  border-radius: .5rem;
}

.ptr-Tag.is-placeholder-light {
  background: $placeholderLightColor;
}

.ptr-Tag.is-placeholder::before {
  @include placeholderAnimation()
}

.ptr-Tag-caption {
  font-size: $a1;
  color: $secondaryTextColor;
  padding-top: .1rem;
}

.ptr-Tag > .ptr-icon,
.ptr-Tag > .ptr-react-icon {
  margin-left: -.1rem;
  width: 1.125rem;
  height: 1.125rem;
}

.ptr-Tag > .ptr-icon .line {
  fill: $secondaryIconColor;
}

// Small
.ptr-Tag.is-small {
  height: 1.5rem;
  padding: 0 .5rem;
  color: $secondaryIconColor;
  grid-gap: .25rem;
}

.ptr-Tag.is-small .ptr-Tag-caption {
  color: $secondaryTextColor;
  font-size: $b1;
  padding-top: .13rem;
}

.ptr-Tag.is-small > .ptr-icon,
.ptr-Tag.is-small > .ptr-react-icon {
  margin-left: -.05rem;
  width: 1rem;
  height: 1rem;
}

// Interactive
.ptr-Tag.is-interactive {
  cursor: pointer;
}

.ptr-Tag:not(.is-interactive) {
  pointer-events: none;
}

// Darker
.ptr-Tag.is-darker {
  color: $baseIconColor;
  background: var(--base25);
}

.ptr-Tag.is-darker .ptr-Tag-caption {
  color: $baseTextColor;
}

.ptr-Tag.is-darker > .ptr-icon .line {
  fill: $baseIconColor;
}

// Active
.ptr-Tag.is-active {
  background: $accentedBackgroundLightColor;
  color: $accentedIconColor;
}

.ptr-Tag.is-active .ptr-Tag-caption {
  color: $accentedTextColor;
  font-weight: 500;
}

.ptr-Tag.is-active > .ptr-icon .line {
  fill: $accentedIconColor;
}

.ptr-Tag.is-active.is-darker {
  background: $accentedBackgroundDarkColor;
  color: $accentedDarkTextColor;
}

.ptr-Tag.is-active.is-darker .ptr-Tag-caption {
  color: $accentedDarkTextColor;
}

.ptr-Tag.is-active.is-darker > .ptr-icon .line {
  fill: $accentedDarkTextColor;
}

// Disabled
.ptr-Tag.is-disabled {
  background: $disabledBackgroundColor;
  color: $disabledIconColor;
}

.ptr-Tag.is-disabled .ptr-Tag-caption {
  color: $disabledTextColor;
}

.ptr-Tag.is-disabled > .ptr-icon .line {
  fill: $disabledIconColor;
}

/* Ghost Tag */
.ptr-Tag.is-ghost {
  border: 1px solid $secondaryBorderColor;
  background: none;
  color: $baseIconColor;
  padding: 0 .65rem;
}

.ptr-Tag.is-ghost:hover {
  background: $hoverBackgroundColor;
}

.ptr-dark .ptr-Tag.is-ghost:not(.is-active):hover {
  background: $hoverBackgroundColor-dark;
}

.ptr-Tag.is-ghost .ptr-Tag-caption {
  color: $baseTextColor;
}

.ptr-Tag.is-ghost > .ptr-icon .line {
  fill: $baseIconColor;
}

// Small
.ptr-Tag.is-ghost.is-small {
  padding: 0 .4rem;
}

// Active
.ptr-Tag.is-ghost.is-active {
  border: 2px solid $accentedBorderColor;
  background: $accentedBackgroundLightColor;
  color: $accentedIconColor;
}

.ptr-Tag.is-ghost.is-active .ptr-Tag-caption {
  color: $accentedTextColor;
}

.ptr-Tag.is-ghost.is-active > .ptr-icon .line {
  fill: $accentedIconColor;
}

// Disabled
.ptr-Tag.is-ghost.is-disabled {
  border-color: $disabledBorderColor;
  color: $disabledIconColor;
  pointer-events: none;
}

.ptr-Tag.is-ghost.is-disabled .ptr-Tag-caption {
  color: $disabledTextColor;
}

.ptr-Tag.is-ghost.is-disabled > .ptr-icon .line {
  fill: $disabledIconColor;
}
